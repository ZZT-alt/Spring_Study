<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context  http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/tx  http://www.springframework.org/schema/tx/spring-tx.xsd
                           http://www.springframework.org/schema/aop  http://www.springframework.org/schema/aop/spring-aop.xsd">

<!--    加载外部的properties文件-->
    <context:property-placeholder location="classpath:mysql.properties"/>

    <!--    <bean id="UserDao" class="com.ZZT.Dao.Impl.UserDaoImpl" scope="singleton" init-method="Init" destroy-method="Delete"></bean>-->


    <!--    <bean id="UserDao" class="com.ZZT.factory.StaticFactory" factory-method="getUserDao"></bean>-->


    <!--    <bean id="factory" class="com.ZZT.factory.DynamicFactory"></bean>-->
    <!--    <bean id="UserDao" factory-bean="factory" factory-method="getUserDao"></bean>-->

    <bean id="u1" class="com.ZZT.Domain.User">
        <property name="name" value="ZZT"/>
        <property name="address" value="广东省"/>
    </bean>
    <bean id="u2" class="com.ZZT.Domain.User">
        <property name="name" value="小郑"/>
        <property name="address" value="广东省"/>
    </bean>
    <bean id="userDao" class="com.ZZT.Dao.Impl.UserDaoImpl">
        <property name="age" value="18"/>
        <property name="name" value="ZZT"/>
        <property name="stringList">
            <list>
                <value>Z</value>
                <value>Z</value>
                <value>T</value>
            </list>
        </property>
        <property name="useMap">
            <map>
                <entry key="1" value-ref="u1"/>
                <entry key="2" value-ref="u2"/>
            </map>
        </property>
        <property name="properties">
            <props>
                <prop key="p1">ppp1</prop>
                <prop key="p2">ppp2</prop>
                <prop key="p3">ppp3</prop>
            </props>
        </property>
    </bean>


    <bean id="userService" class="com.ZZT.service.Impl.UserServiceImpl">
<!--        <constructor-arg name="userDao" ref="UserDao"/>-->
        <property name="userDao" ref="userDao"/>
    </bean>

    <bean id="brandDao" class="com.ZZT.Dao.Impl.BrandDaoImpl">
        <property name="jdbcTemplate" ref="jdbcTemplate"/>
    </bean>

<!--    目标对象 内部的方法就是切点-->
    <bean id="accountService" class="com.ZZT.service.Impl.AccountServiceImpl">
        <property name="brandDao" ref="brandDao"/>
    </bean>

    <!--    配置平台事务管理器-->
    <bean id="dataSourceTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--    通知事务的增强-->
    <tx:advice id="txAdvice" transaction-manager="dataSourceTransactionManager">
        <tx:attributes>
            <tx:method name="*"/>
        </tx:attributes>
    </tx:advice>

    <aop:config>
        <aop:advisor advice-ref="txAdvice" pointcut="execution(* com.ZZT.service.Impl.*.*(..))"/>
    </aop:config>

<!--    配置数据源对象-->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${driver}"/>
        <property name="jdbcUrl" value="${url}"/>
        <property name="user" value="${user}"/>
        <property name="password" value="${password}"/>
    </bean>

<!--    配置jdbcTemplate对象-->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"/>
    </bean>


    <!--    使用注解扫描-->
    <context:component-scan base-package="com.ZZT"/>

<!--    目标对象-->
    <bean id="target" class="com.ZZT.aop.Target"/>

<!--    切面对象-->
    <bean id="myAspect" class="com.ZZT.aop.MyAspect"/>

<!--    配置织入-->
    <aop:config>
        <!--        声明切面-->
        <aop:aspect ref="myAspect">
            <!--        切面:切点+通知-->
            <aop:pointcut id="myPointcut" expression="execution(* com.ZZT.aop.*.*(..))"/>
            <aop:before method="before" pointcut="execution(* com.ZZT.aop.*.*(..))"/>
            <aop:after-returning method="after_running" pointcut="execution(* com.ZZT.aop.*.*(..))"/>
<!--            <aop:around method="around" pointcut-ref="myPointcut"/>-->
            <aop:after-throwing method="after_throwing" pointcut-ref="myPointcut"/>
            <aop:after method="after" pointcut-ref="myPointcut"/>
        </aop:aspect>
    </aop:config>

</beans>
